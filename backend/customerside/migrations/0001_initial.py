# Generated by Django 4.0.4 on 2022-07-02 13:42

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(max_length=17, null=True, validators=[django.core.validators.RegexValidator(message='Invalid Phone Number', regex='^1?\\d{9,15}$')])),
                ('is_businessOwner', models.BooleanField(default=False)),
                ('is_shopVerified', models.BooleanField(default=False, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Plans',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=30, null=True)),
                ('duration', models.IntegerField()),
                ('price', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('default_duration', models.IntegerField(default=0)),
                ('default_price', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('fullname', models.CharField(blank=True, max_length=150, null=True)),
                ('type', models.CharField(choices=[('HairSalon', 'Hair Salon'), ('BeautySalon', 'Beauty Salon')], default='HairSalon', max_length=20)),
                ('gender', models.CharField(choices=[('male', 'male'), ('female', 'female'), ('mixed', 'mixed')], default='Male', max_length=20)),
                ('complete_address', models.CharField(max_length=200)),
                ('search_location', models.CharField(max_length=200, null=True)),
                ('latitude', models.CharField(max_length=200, null=True)),
                ('longitude', models.CharField(max_length=200, null=True)),
                ('locality', models.CharField(max_length=200, null=True)),
                ('pin_code', models.CharField(max_length=200, null=True)),
                ('state', models.CharField(max_length=50, null=True)),
                ('nation', models.CharField(max_length=50, null=True)),
                ('contact_number', models.CharField(max_length=17, null=True, validators=[django.core.validators.RegexValidator(message='Invalid Phone Number', regex='^1?\\d{9,15}$')])),
                ('opening_time', models.TimeField()),
                ('closing_time', models.TimeField()),
                ('temp_closing_time', models.TimeField(blank=True, default=models.TimeField(), null=True)),
                ('shop_certificate', models.ImageField(blank=True, null=True, upload_to='shopmenus')),
                ('is_open', models.BooleanField(default=False)),
                ('main_image', models.ImageField(blank=True, null=True, upload_to='shopImages')),
                ('verified', models.BooleanField(default=False)),
                ('verification_process', models.CharField(choices=[('none', 'none'), ('verificatonRequested', 'verificatonRequested'), ('verificationApproved', 'verificationApproved'), ('menuCreated', 'menuCreated'), ('planSelected', 'planSelected'), ('verificationDone', 'verificationDone')], default='verificatonRequested', max_length=20)),
                ('queue_time', models.DateTimeField(blank=True, null=True)),
                ('owner', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ShopService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration', models.IntegerField(default=0)),
                ('price', models.CharField(max_length=50)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customerside.service')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customerside.shop')),
            ],
        ),
        migrations.CreateModel(
            name='ShopRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], default=5)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customerside.shop')),
            ],
        ),
        migrations.CreateModel(
            name='ShopPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_type', models.CharField(choices=[('razorpay', 'razorpay'), ('paypal', 'paypal')], max_length=20, null=True)),
                ('payment_status', models.CharField(choices=[('success', 'success'), ('processing', 'processing'), ('Failed', 'failed'), ('RefundRequired', 'refund required'), ('Refunded', 'refunded')], max_length=20, null=True)),
                ('transaction_id', models.CharField(blank=True, max_length=100, null=True)),
                ('paid_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('payment_id', models.CharField(max_length=100, null=True)),
                ('plan', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='customerside.plans')),
                ('shop', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='customerside.shop')),
            ],
        ),
        migrations.CreateModel(
            name='ShopHolidays',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_sunday', models.CharField(default='true', max_length=8)),
                ('is_monday', models.CharField(default='true', max_length=8)),
                ('is_tuesday', models.CharField(default='true', max_length=8)),
                ('is_wednesday', models.CharField(default='true', max_length=8)),
                ('is_thursday', models.CharField(default='true', max_length=8)),
                ('is_friday', models.CharField(default='true', max_length=8)),
                ('is_saturday', models.CharField(default='true', max_length=8)),
                ('shop', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='customerside.shop')),
            ],
        ),
        migrations.CreateModel(
            name='Queue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=False)),
                ('date', models.DateField(default=datetime.datetime.today)),
                ('time', models.TimeField(default=datetime.datetime.now)),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='customerside.shopservice')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customerside.shop')),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=30, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customerside.shop')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_type', models.CharField(choices=[('Razorpay', 'razorpay'), ('paypal', 'paypal')], max_length=20)),
                ('payment_status', models.CharField(choices=[('success', 'success'), ('processing', 'processing'), ('failed', 'failed'), ('refundRequired', 'refundRequired'), ('refunded', 'refunded')], max_length=20)),
                ('transaction_id', models.CharField(blank=True, max_length=100, null=True)),
                ('paid_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('payment_id', models.CharField(max_length=100, null=True)),
                ('shop', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='customerside.shop')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Bookmarks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customerside.shop')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
